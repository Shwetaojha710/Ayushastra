const multer = require('multer');
const path =require("path");

const storage = multer.diskStorage({
    destination : (req, file, cb)=>{    //It takes three arguments: req (the incoming request), file (the file being uploaded), and cb a callback function that is used to pass a result back to multer (to either allow or deny the file upload).
        cb(null,'upload/');
        //Inside this function, cb(null, 'uploads/') tells multer to store the file in the uploads/ directory. The first argument to cb is null to indicate no error.
    },
    filename:(req,file,cb)=>{
        cb(null, Date.now() + path.extname(file.originalname));
        //The filename is generated by concatenating the current timestamp (Date.now()) with the file's original extension (path.extname(file.originalname)), ensuring that each uploaded file has a unique name. For example, if the original file is named image.png, the new filename could be something like 1632934629342.png.
    }
})

const fileFilter = (req, file, cb) => {
    if (file.mimetype.startsWith('image/') || file.mimetype.startsWith('application/pdf')) {//The file.mimetype contains the MIME type of the uploaded file, such as image/png or image/jpeg.
    //The startsWith('image/') checks if the file is an image by seeing if the MIME type begins with the string 'image/'.If this condition is true, it means the file is an image.

      cb(null, true); //true means the file is an image
    } else {
      cb(new Error('Only image files are allowed'), false); 
    }
  };
  
  const upload = multer({ 
    storage: storage,
    fileFilter: fileFilter 
  });
  
  module.exports = upload;
  